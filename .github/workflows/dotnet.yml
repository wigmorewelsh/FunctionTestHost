name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        functionsdk: [ '1.9.0', '1.10.0', '1.11.0' ]
        workerversion: [ '1.13.0', '1.14.0', '1.15.0', '1.16.0' ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: GitTools Setup
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: GitTools Run
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
  test:
    needs: build
    strategy:
      matrix:
        functionsdk: [ '1.9.0', '1.10.0', '1.11.0' ]
        workerversion: [ '1.13.0', '1.14.0', '1.15.0', '1.16.0' ]

      runs-on: ubuntu-latest
    steps:
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
        env:
          functionsdk: ${{ matrix.functionsdk }}
          workerversion: ${{ matrix.workerversion }}
  release:
    needs: [build, test]
    steps:
      - name: Pack
        run: dotnet pack --configuration Release
      - name: Create Release
        id: create_release
        if: contains(github.ref, 'master')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.gitversion.outputs.semVer }}
          release_name: Release ${{ steps.gitversion.outputs.semVer }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Publish github
        run: dotnet nuget push "**/*.nupkg" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Nuget
        if: contains(github.ref, 'master')
        run: dotnet nuget push "**/*.nupkg" --source "nuget.org" --api-key ${{ secrets.NUGETORG }}

